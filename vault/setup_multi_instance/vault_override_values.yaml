
global:
  enabled: true
  tlsDisable: false

injector:
  enabled: true
  # Use the Vault K8s Image https://github.com/hashicorp/vault-k8s/
  image:
    repository: "hashicorp/vault-k8s"
    tag: "latest"

  resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 250m

  volumes:
    - type: secret
      name: tls-server
      mountPath: /vault/userconfig/tls-server

  certs:
    caBundle: "<<ca_bundle>>"
    secretName: tls-server
    certName: vault.crt
    keyName: vault.key



certs:

    # caBundle is a base64-encoded PEM-encoded certificate bundle for the
    # CA that the webhook serves. This must
    # be set if secretName is non-null.
    # Here we have pasted the ca.crt encoded in base64
    caBundle: "<<ca_bundle>>"

    # secretName is the name of the secret that has the TLS certificate and
    # private key to serve the injector webhook. If this is null, then the
    # injector will default to its automatic management mode that will assign
    # a service account to the injector to generate its own certificates.
    secretName: tls-server

    # certName and keyName are the names of the files within the secret for
    # the TLS cert and private key, respectively. These have reasonable
    # defaults but can be customized if necessary.
    certName: vault.crt
    keyName: vault.key



server:
  affinity: ""
  enabled: true

  # Use the Enterprise Image
  # image:
  #   repository: "hashicorp/vault-enterprise"
  #   tag: "1.5.0_ent"


  serviceAccount:
    create: false
    name: vault-auth


  resources:
    requests:
      memory: 256Mi
      cpu: 500m
    limits:
      memory: 512Mi
      cpu: 500m


  # For HA configuration and because we need to manually init the vault,
  # we need to define custom readiness/liveness Probe settings
  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60


  # extraEnvironmentVars is a list of extra environment variables to set with the stateful set. These could be
  # used to include variables required for auto-unseal.
  extraEnvironmentVars:
    VAULT_CACERT: "/vault/userconfig/tls-ca/ca.crt"

  # extraVolumes is a list of extra volumes to mount. These will be exposed
  # to Vault in the path `/vault/userconfig/<name>/`.
  extraVolumes:
    - type: secret
      name: tls-server
      mountPath: /vault/userconfig/tls-server
    - type: secret
      name: tls-ca
      mountPath: /vault/userconfig/tls-ca
    # - type: secret
    #   name: kms-creds

  # This configures the Vault Statefulset to create a PVC for audit logs.
  # See https://www.vaultproject.io/docs/audit/index.html to know more
  auditStorage:
    enabled: true

  standalone:
    enabled: false

  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true

      config: |
        ui = true
        disable_mlock = true

        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/userconfig/tls-server/vault.crt"
          tls_key_file = "/vault/userconfig/tls-server/vault.key"
          tls_client_ca_file = "/vault/userconfig/tls-ca/ca.crt"
        }

        seal "transit" {
          address = "https://vault-kms-instance.vault-kms:8200"
          disable_renewal = "false"
          key_name = "autounseal"
          mount_path = "transit/"
          token = "<<root_token>>"
        }

        storage "consul" {
          address = "http://consul-consul-server.vault:8500"
          path = "vault/"
          tls_ca_file   = "/vault/userconfig/tls-ca/ca.crt"
          tls_cert_file = "/vault/userconfig/tls-server/vault.crt"
          tls_key_file  = "/vault/userconfig/tls-server/vault.key"
        }

        service_registration "kubernetes" {}

  service:
    type: ClusterIP
    clusterIP: None
    name: vault

# Vault UI
ui:
  enabled: true
  serviceType: "LoadBalancer"
  serviceNodePort: null
  externalPort: 8200

  # For Added Security, edit the below
  #loadBalancerSourceRanges:
  #   - < Your IP RANGE Ex. 10.0.0.0/16 >
  #   - < YOUR SINGLE IP Ex. 1.78.23.3/32 >



